:root {
    --menu-padding: 0.75em;

    --main-color: #094a8c;
    --accent-color: #ffc500;

    --main-text-color: white;
    --accent-text-color: var(--main-color);

    --main-muted-color: #009eb5;
}

body, html {
    height: 100%;
}

body {
    font-family: sans-serif;
    margin: unset;
    display: grid;
    grid-template-rows: auto 1fr auto;
}

body > footer {
    grid-row: -2 / -1;
}

/* Header formatting: One row of vertically centered items, with the same padding of the buttons and space between items */
header {
    padding: var(--menu-padding);
    background: var(--main-color);
    color: var(--main-text-color);
    display: flex;
    gap: 1em;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

header > img {
    width: 10em;
    object-fit: contain;
}

header span {
    white-space: nowrap;
}

/* Footer formatting: At least one row of centered items. */
footer {
	background: var(--main-color);
	display: flex;
	justify-content: center;
	color: var(--accent-color);
	padding: calc(var(--menu-padding)/2);
    gap: calc(var(--menu-padding)/2);
    flex-wrap: wrap;
}

/* Login page formatting */
/* Have a minimum padding to each side */
div.login {
    padding-left: 1em;
    padding-right: 1em;
    flex-grow: 1;
}

/* Center in the middle */
div.login > div {
    min-width: 10em;
    max-width: 20em;
    margin: 3em auto;
    border: 0.2em solid var(--main-color);
    border-radius: 0.2em;
}

/* Login form formatting: Each item is in a row with a bit of gap in between, also padding on the outside */
div.login form {
    display: flex;
    flex-direction: column;
    padding: 0.5em;
    gap: 0.5em;
}

/* The select should not stretch! */
div.login form select {
    align-self: start;
}

/* The first item and each notification should have a certain backgound. */
div.login > div > :first-child, div.notifications > div {
    background: var(--main-color);
    color: var(--main-text-color);
    padding: 4px;
    text-align: center;
}

/* Each notification should also have their own margin and border. */
div.notifications > div {
    margin: 4px;
    border: 0.2em solid var(--main-color);
    border-radius: 0.2em;
}

/* Error notifications have their own background color. */
div.notifications > div.error {
    --main-color: coral;
}

/* Customer and Employee tables */
table.list {
    border-collapse: collapse;
    margin: 0.5em;
}

table.list td, table.list th {
    border: 1px solid var(--main-color);
    padding: 4px;
}

table.list th {
    background: var(--main-color);
    color: var(--accent-color);
}

table.list form.operation {
    display: flex;
    justify-content: center;
    gap: 0.25em;
}

table.list form.operation button {
    width: 1.8em;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2px;
}

main > div.main-title {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

main > div.main-title > :first-child {
    flex-grow: 1;
}

form.addnew {
    display: inline;
    margin: 0px 4px;
}

form.table {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 0.25em 0.25em;
    max-width: 30em;
}

form.table input[type="submit"] {
    grid-column-end: -1;
}

form.table input[type="checkbox"] {
    justify-self: start;
}

div.thread:nth-child(odd) {
    --bg-color: var(--accent-color);
    --text-color: var(--accent-text-color);
}

div.header-container>div {
    padding: 4px;
}

div.thread>div.content {
    padding-right: 0px;
}

div.thread div.subject {
    font-weight: bold;
    font-size: large;
}

div.message:not(:first-child) {
    margin-left: 1em;
}

form.message>* {
    display: block;
    width: 100%;
    margin: 4px 0;
    box-sizing: border-box;
}

form.message button {
    display: flex;
    align-items: center;
    gap: 0.2em;
}

form.message button img {
    height: 1.5em;
}

div.thread form.message>* {
    margin-top: unset;
    margin-bottom: unset;
}

div.thread {
    --bg-color: var(--main-color);
    --text-color: var(--main-text-color);
    border-left: 4px solid var(--bg-color);
    margin: 1em 0px;
}

div.header-container>div:first-child {
    display: flex;
    background: var(--bg-color);
    color: var(--text-color);
    align-items: center;
    gap: 4px;
    /* flex-direction: column; */
}

div.tariff {
    white-space: nowrap;
}

div.thread>div:first-child {
    margin-left: 0;
}

div.header-container>div:first-child>div:first-child {
    flex-grow: 1;
}

div.message {
    margin-right: 0;
}

form.message>button {
    width: auto;
    margin-left: auto;
}

div.container {
    display: grid;
    /* We want to switch between column-flow and row-flow */
    grid-auto-flow: column;
    grid-template-columns: auto 1fr;
}

div.container > :not(main) {
    min-width: 10em;
}

div.container > main {
    margin: 0 var(--menu-padding);
}

@media (max-width: 650px) {
    form.table {
        grid-template-columns: auto;
    }

    div.container {
        grid-auto-flow: row;
        grid-template-rows: auto 1fr;
        grid-template-columns: auto;
    }

    .head {
        flex-direction: column;
        align-items: start;
    }

    nav {
        padding-bottom: 0.5em;
    }

    div.thread form.message span {
        display: none;
    }
}

/* Button animation handling */
.anim-button {
    background: linear-gradient(to left, var(--start-color) 34%, var(--end-color) 66%) right;
    background-size: 300%;
    color: var(--start-text-color);
    transition: .2s ease-out;
    border: none;

    /* Default colors, from white to snd-color */
    --start-color: white;
    --start-text-color: var(--accent-text-color);
    --end-color: var(--accent-color);
    --end-text-color: var(--accent-text-color);
}

.anim-button:not([disabled]):not(.anim-button.disabled):hover,
.anim-button:not([disabled]):not(.anim-button.disabled):focus-within {
    background-position: left;
    color: var(--end-text-color);
}

.anim-button.bordered {
    border: 0.2em solid var(--end-color);
    border-radius: 0.2em;
}

.anim-button[disabled], .anim-button.disabled {
    background: hsl(0, 0%, 70%) !important;
    color: hsl(0, 0%, 50%) !important;
}

.anim-button.bordered[disabled], .anim-button.bordered.disabled {
    border-color: hsl(0, 0%, 50%) !important;
}

div.thread .anim-button {
    --start-color: var(--bg-color);
    --start-text-color: var(--text-color);
    --end-color: white;
    --end-text-color: var(--main-color);
}

/* Navigation Handling */

nav {
    background: var(--main-color);
}

nav>div.selected {
    --start-color: var(--main-color);
    --start-text-color: var(--main-text-color);
}

/* Style links and button explicitly, to make them look alike */

nav a:focus-visible, nav button:focus-visible {
    outline: solid 2px blue;
}

nav a, nav button {
    background: transparent;
    border: none;
    padding: var(--menu-padding);
    font-size: initial;
    text-decoration: none;
    color: inherit;
    outline: none;
}

nav a, nav button {
    display: flex;
    gap: 0.5em;
    align-items: center;
}

nav a img, nav button img {
    height: 1.5em;
}

/* Makes the <button> look like nothing else, if they are inside a <div> for the animated button. */
div.anim-button button {
    background: none;
    border: none;
    width: 100%;
    height: 100%;
    cursor: pointer;
    color: inherit;
}